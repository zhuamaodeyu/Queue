package configuration for libxslt is not found
package configuration for libxml-2.0 is not found
package configuration for libiconv is not found
find_header: checking for libxml/parser.h... -------------------- yes

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector     -lruby-static -framework CoreFoundation  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
189 warnings generated.
ld: warning: directory not found for option '-L/opt/local/lib'
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main(int argc, char **argv)
4: {
5:   return 0;
6: }
/* end */

"/usr/bin/clang -E -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX  conftest.c -o conftest.i"
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <libxml/parser.h>
/* end */

--------------------

find_header: checking for libxslt/xslt.h... -------------------- yes

"/usr/bin/clang -E -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX  conftest.c -o conftest.i"
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <libxslt/xslt.h>
/* end */

--------------------

find_header: checking for libexslt/exslt.h... -------------------- yes

"/usr/bin/clang -E -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX  conftest.c -o conftest.i"
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <libexslt/exslt.h>
/* end */

--------------------

have_func: checking for iconv_open() in iconv.h... -------------------- no

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector     -lruby-static -framework CoreFoundation  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
189 warnings generated.
ld: warning: directory not found for option '-L/opt/local/lib'
Undefined symbols for architecture x86_64:
  "_iconv_open", referenced from:
      _t in conftest-c75c49.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: #include <iconv.h>
 4: 
 5: /*top*/
 6: extern int t(void);
 7: int main(int argc, char **argv)
 8: {
 9:   if (argc > 1000000) {
10:     printf("%p", &t);
11:   }
12: 
13:   return 0;
14: }
15: int t(void) { void ((*volatile p)()); p = (void ((*)()))iconv_open; return 0; }
/* end */

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector     -lruby-static -framework CoreFoundation  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:15:26: error: too few arguments to function call, expected 2, have 0
int t(void) { iconv_open(); return 0; }
              ~~~~~~~~~~ ^
/usr/include/iconv.h:68:1: note: 'iconv_open' declared here
extern __LIBICONV_DLL_EXPORTED iconv_t iconv_open (const char* __tocode, const char* __fromcode);
^
189 warnings and 1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: #include <iconv.h>
 4: 
 5: /*top*/
 6: extern int t(void);
 7: int main(int argc, char **argv)
 8: {
 9:   if (argc > 1000000) {
10:     printf("%p", &t);
11:   }
12: 
13:   return 0;
14: }
15: int t(void) { iconv_open(); return 0; }
/* end */

--------------------

have_library: checking for iconv_open() in -liconv... -------------------- yes

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector     -lruby-static -framework CoreFoundation -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
189 warnings generated.
ld: warning: directory not found for option '-L/opt/local/lib'
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: #include <iconv.h>
 4: 
 5: /*top*/
 6: extern int t(void);
 7: int main(int argc, char **argv)
 8: {
 9:   if (argc > 1000000) {
10:     printf("%p", &t);
11:   }
12: 
13:   return 0;
14: }
15: int t(void) { void ((*volatile p)()); p = (void ((*)()))iconv_open; return 0; }
/* end */

--------------------

find_library: checking for xmlParseDoc() in -lxml2... -------------------- yes

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -liconv  -lruby-static -framework CoreFoundation -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:57: error: use of undeclared identifier 'xmlParseDoc'
int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlParseDoc; return 0; }
                                                        ^
189 warnings and 1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlParseDoc; return 0; }
/* end */

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -liconv  -lruby-static -framework CoreFoundation -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:15: warning: implicit declaration of function 'xmlParseDoc' is invalid in C99 [-Wimplicit-function-declaration]
int t(void) { xmlParseDoc(); return 0; }
              ^
190 warnings generated.
ld: warning: directory not found for option '-L/opt/local/lib'
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { xmlParseDoc(); return 0; }
/* end */

--------------------

find_library: checking for xsltParseStylesheetDoc() in -lxslt... -------------------- yes

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lxml2 -liconv  -lruby-static -framework CoreFoundation -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:57: error: use of undeclared identifier 'xsltParseStylesheetDoc'
int t(void) { void ((*volatile p)()); p = (void ((*)()))xsltParseStylesheetDoc; return 0; }
                                                        ^
189 warnings and 1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { void ((*volatile p)()); p = (void ((*)()))xsltParseStylesheetDoc; return 0; }
/* end */

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lxml2 -liconv  -lruby-static -framework CoreFoundation -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:15: warning: implicit declaration of function 'xsltParseStylesheetDoc' is invalid in C99 [-Wimplicit-function-declaration]
int t(void) { xsltParseStylesheetDoc(); return 0; }
              ^
190 warnings generated.
ld: warning: directory not found for option '-L/opt/local/lib'
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { xsltParseStylesheetDoc(); return 0; }
/* end */

--------------------

find_library: checking for exsltFuncRegister() in -lexslt... -------------------- yes

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:57: error: use of undeclared identifier 'exsltFuncRegister'
int t(void) { void ((*volatile p)()); p = (void ((*)()))exsltFuncRegister; return 0; }
                                                        ^
189 warnings and 1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { void ((*volatile p)()); p = (void ((*)()))exsltFuncRegister; return 0; }
/* end */

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:15: warning: implicit declaration of function 'exsltFuncRegister' is invalid in C99 [-Wimplicit-function-declaration]
int t(void) { exsltFuncRegister(); return 0; }
              ^
190 warnings generated.
ld: warning: directory not found for option '-L/opt/local/lib'
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { exsltFuncRegister(); return 0; }
/* end */

--------------------

have_func: checking for xmlHasFeature()... -------------------- yes

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lexslt -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:57: error: use of undeclared identifier 'xmlHasFeature'
int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlHasFeature; return 0; }
                                                        ^
189 warnings and 1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlHasFeature; return 0; }
/* end */

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lexslt -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:15: warning: implicit declaration of function 'xmlHasFeature' is invalid in C99 [-Wimplicit-function-declaration]
int t(void) { xmlHasFeature(); return 0; }
              ^
190 warnings generated.
ld: warning: directory not found for option '-L/opt/local/lib'
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { xmlHasFeature(); return 0; }
/* end */

--------------------

have_func: checking for xmlFirstElementChild()... -------------------- yes

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lexslt -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:57: error: use of undeclared identifier 'xmlFirstElementChild'
int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlFirstElementChild; return 0; }
                                                        ^
189 warnings and 1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlFirstElementChild; return 0; }
/* end */

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lexslt -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:15: warning: implicit declaration of function 'xmlFirstElementChild' is invalid in C99 [-Wimplicit-function-declaration]
int t(void) { xmlFirstElementChild(); return 0; }
              ^
190 warnings generated.
ld: warning: directory not found for option '-L/opt/local/lib'
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { xmlFirstElementChild(); return 0; }
/* end */

--------------------

have_func: checking for xmlRelaxNGSetParserStructuredErrors()... -------------------- yes

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lexslt -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:57: error: use of undeclared identifier 'xmlRelaxNGSetParserStructuredErrors'
int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlRelaxNGSetParserStructuredErrors; return 0; }
                                                        ^
189 warnings and 1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlRelaxNGSetParserStructuredErrors; return 0; }
/* end */

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lexslt -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:15: warning: implicit declaration of function 'xmlRelaxNGSetParserStructuredErrors' is invalid in C99 [-Wimplicit-function-declaration]
int t(void) { xmlRelaxNGSetParserStructuredErrors(); return 0; }
              ^
190 warnings generated.
ld: warning: directory not found for option '-L/opt/local/lib'
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { xmlRelaxNGSetParserStructuredErrors(); return 0; }
/* end */

--------------------

have_func: checking for xmlRelaxNGSetParserStructuredErrors()... -------------------- yes

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lexslt -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:57: error: use of undeclared identifier 'xmlRelaxNGSetParserStructuredErrors'
int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlRelaxNGSetParserStructuredErrors; return 0; }
                                                        ^
189 warnings and 1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlRelaxNGSetParserStructuredErrors; return 0; }
/* end */

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lexslt -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:15: warning: implicit declaration of function 'xmlRelaxNGSetParserStructuredErrors' is invalid in C99 [-Wimplicit-function-declaration]
int t(void) { xmlRelaxNGSetParserStructuredErrors(); return 0; }
              ^
190 warnings generated.
ld: warning: directory not found for option '-L/opt/local/lib'
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { xmlRelaxNGSetParserStructuredErrors(); return 0; }
/* end */

--------------------

have_func: checking for xmlRelaxNGSetValidStructuredErrors()... -------------------- yes

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lexslt -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:57: error: use of undeclared identifier 'xmlRelaxNGSetValidStructuredErrors'
int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlRelaxNGSetValidStructuredErrors; return 0; }
                                                        ^
189 warnings and 1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlRelaxNGSetValidStructuredErrors; return 0; }
/* end */

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lexslt -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:15: warning: implicit declaration of function 'xmlRelaxNGSetValidStructuredErrors' is invalid in C99 [-Wimplicit-function-declaration]
int t(void) { xmlRelaxNGSetValidStructuredErrors(); return 0; }
              ^
190 warnings generated.
ld: warning: directory not found for option '-L/opt/local/lib'
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { xmlRelaxNGSetValidStructuredErrors(); return 0; }
/* end */

--------------------

have_func: checking for xmlSchemaSetValidStructuredErrors()... -------------------- yes

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lexslt -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:57: error: use of undeclared identifier 'xmlSchemaSetValidStructuredErrors'
int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlSchemaSetValidStructuredErrors; return 0; }
                                                        ^
189 warnings and 1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlSchemaSetValidStructuredErrors; return 0; }
/* end */

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lexslt -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:15: warning: implicit declaration of function 'xmlSchemaSetValidStructuredErrors' is invalid in C99 [-Wimplicit-function-declaration]
int t(void) { xmlSchemaSetValidStructuredErrors(); return 0; }
              ^
190 warnings generated.
ld: warning: directory not found for option '-L/opt/local/lib'
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { xmlSchemaSetValidStructuredErrors(); return 0; }
/* end */

--------------------

have_func: checking for xmlSchemaSetParserStructuredErrors()... -------------------- yes

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lexslt -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:57: error: use of undeclared identifier 'xmlSchemaSetParserStructuredErrors'
int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlSchemaSetParserStructuredErrors; return 0; }
                                                        ^
189 warnings and 1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { void ((*volatile p)()); p = (void ((*)()))xmlSchemaSetParserStructuredErrors; return 0; }
/* end */

"/usr/bin/clang -o conftest -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/x86_64-darwin18 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/backward -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0 -I. -I/opt/local/include/libxml2 -I/usr/local/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/libxml2 -I/opt/local/include -I/usr/local/include -I/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/libxml2 -I/usr/include -I/usr/include/libxml2 -I/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -pipe -mmacosx-version-min=10.10 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk -g -DXP_UNIX conftest.c  -L/opt/local/lib -L/usr/local/lib -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L/usr/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/lib -L. -L/Users/akulaku/Desktop/CocoaPods-app/destroot/dependencies/lib -fstack-protector    -lexslt -lxslt -lxml2 -liconv  -lruby-static -framework CoreFoundation -lexslt -lxslt -lxml2 -liconv  -lpthread -ldl -lobjc  "
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
In file included from /usr/include/stdio.h:64:
/usr/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:26:
/usr/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/include/stdio.h:390:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/include/stdio.h:390:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/include/stdio.h:390:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/include/stdio.h:390:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/include/stdio.h:390:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/include/stdio.h:390:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/include/stdio.h:391:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/include/stdio.h:391:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/include/stdio.h:391:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/include/stdio.h:392:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/include/stdio.h:392:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/include/stdio.h:392:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/include/stdio.h:388:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/include/stdio.h:388:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/include/stdio.h:388:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby.h:33:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/ruby.h:36:
In file included from /Users/akulaku/Desktop/CocoaPods-app/destroot/bundle/include/ruby-2.2.0/ruby/defines.h:34:
/usr/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/include/stdlib.h:266:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/include/stdlib.h:266:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/include/stdlib.h:266:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/include/stdlib.h:271:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/include/stdlib.h:271:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/include/stdlib.h:271:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/include/stdlib.h:277:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/include/stdlib.h:277:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/include/stdlib.h:277:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/include/stdlib.h:277:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/include/stdlib.h:277:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/include/stdlib.h:277:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/include/stdlib.h:278:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/include/stdlib.h:278:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/include/stdlib.h:278:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/include/stdlib.h:278:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/include/stdlib.h:278:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/include/stdlib.h:278:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/include/stdlib.h:277:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/include/stdlib.h:277:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/include/stdlib.h:277:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/include/stdlib.h:282:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/include/stdlib.h:282:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/include/stdlib.h:282:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/include/stdlib.h:282:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/include/stdlib.h:282:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:282:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:282:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/include/stdlib.h:282:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/include/stdlib.h:282:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/include/stdlib.h:284:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/include/stdlib.h:284:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/include/stdlib.h:284:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:284:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/include/stdlib.h:284:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/include/stdlib.h:284:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/include/stdlib.h:284:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/include/stdlib.h:284:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/include/stdlib.h:284:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/include/stdlib.h:284:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/include/stdlib.h:284:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:284:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:284:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/include/stdlib.h:284:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:284:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:285:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/include/stdlib.h:285:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:285:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:285:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/include/stdlib.h:285:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/include/stdlib.h:285:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/include/stdlib.h:285:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/include/stdlib.h:285:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:285:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:285:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/include/stdlib.h:285:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/include/stdlib.h:285:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/include/stdlib.h:286:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/include/stdlib.h:286:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/include/stdlib.h:286:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:286:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/include/stdlib.h:286:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:286:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:287:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/include/stdlib.h:287:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:287:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:287:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/include/stdlib.h:287:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/include/stdlib.h:287:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/include/stdlib.h:287:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/include/stdlib.h:287:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/include/stdlib.h:287:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:287:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/include/stdlib.h:287:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/include/stdlib.h:287:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/include/stdlib.h:288:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/include/stdlib.h:288:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:288:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:288:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/include/stdlib.h:288:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:288:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:288:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/include/stdlib.h:288:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:288:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:289:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/include/stdlib.h:289:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/include/stdlib.h:289:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/include/stdlib.h:290:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/include/stdlib.h:290:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/include/stdlib.h:290:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/include/stdlib.h:290:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/include/stdlib.h:290:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/include/stdlib.h:290:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/include/stdlib.h:290:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/include/stdlib.h:290:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/include/stdlib.h:290:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/include/stdlib.h:291:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/include/stdlib.h:291:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/include/stdlib.h:291:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/include/stdlib.h:291:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/include/stdlib.h:291:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/include/stdlib.h:291:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/include/stdlib.h:291:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/include/stdlib.h:291:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/include/stdlib.h:291:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/include/stdlib.h:291:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/include/stdlib.h:291:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/include/stdlib.h:295:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/include/stdlib.h:295:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/include/stdlib.h:295:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/include/stdlib.h:296:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/include/stdlib.h:296:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/include/stdlib.h:296:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/include/stdlib.h:296:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/include/stdlib.h:296:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/include/stdlib.h:296:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/include/stdlib.h:296:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/include/stdlib.h:296:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/include/stdlib.h:296:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/include/stdlib.h:297:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/include/stdlib.h:297:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/include/stdlib.h:297:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/include/stdlib.h:299:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/include/stdlib.h:299:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/include/stdlib.h:299:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/include/stdlib.h:301:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/include/stdlib.h:301:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/include/stdlib.h:301:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/include/stdlib.h:302:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:302:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:302:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:302:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:302:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:302:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:304:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/include/stdlib.h:304:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/include/stdlib.h:304:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/include/stdlib.h:305:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:305:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:305:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:305:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:305:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:305:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:307:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/include/stdlib.h:307:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/include/stdlib.h:307:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/include/stdlib.h:308:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/include/stdlib.h:308:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:308:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:308:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/include/stdlib.h:308:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:308:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:310:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/include/stdlib.h:310:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/include/stdlib.h:310:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/include/stdlib.h:311:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:311:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:311:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:311:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:311:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:311:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:313:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/include/stdlib.h:313:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/include/stdlib.h:313:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/include/stdlib.h:314:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:314:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:314:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:314:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:314:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:314:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:316:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:316:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:316:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:319:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:319:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:319:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:319:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:319:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:319:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:320:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
/usr/include/stdlib.h:320:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nullable
/usr/include/stdlib.h:320:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:320:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
/usr/include/stdlib.h:320:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:320:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:320:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
/usr/include/stdlib.h:320:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:320:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))  __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:322:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/include/stdlib.h:322:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/include/stdlib.h:322:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:323:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
/usr/include/stdlib.h:323:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nullable
/usr/include/stdlib.h:323:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                 ^
                                                  _Nonnull
/usr/include/stdlib.h:323:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
/usr/include/stdlib.h:323:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nullable
/usr/include/stdlib.h:323:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                               ^
                                                                _Nonnull
/usr/include/stdlib.h:325:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/include/stdlib.h:325:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/include/stdlib.h:325:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/include/stdlib.h:325:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/include/stdlib.h:325:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/include/stdlib.h:325:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/include/stdlib.h:326:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/include/stdlib.h:326:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/include/stdlib.h:326:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/include/stdlib.h:326:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/include/stdlib.h:326:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/include/stdlib.h:326:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/include/stdlib.h:326:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/include/stdlib.h:326:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/include/stdlib.h:326:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/include/stdlib.h:327:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/include/stdlib.h:327:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/include/stdlib.h:327:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/include/stdlib.h:327:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:327:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/include/stdlib.h:327:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/include/stdlib.h:327:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/include/stdlib.h:327:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/include/stdlib.h:327:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/include/stdlib.h:329:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/include/stdlib.h:329:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/include/stdlib.h:329:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/include/stdlib.h:330:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/include/stdlib.h:330:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/include/stdlib.h:330:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:330:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/include/stdlib.h:330:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:330:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:330:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/include/stdlib.h:330:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/include/stdlib.h:330:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/include/stdlib.h:334:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/include/stdlib.h:334:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/include/stdlib.h:334:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/include/stdlib.h:334:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/include/stdlib.h:334:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/include/stdlib.h:334:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/include/stdlib.h:337:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/include/stdlib.h:337:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/include/stdlib.h:337:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/include/stdlib.h:337:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/include/stdlib.h:337:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/include/stdlib.h:337:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/include/stdlib.h:337:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:337:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/include/stdlib.h:337:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/include/stdlib.h:339:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/include/stdlib.h:339:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/include/stdlib.h:339:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/include/stdlib.h:339:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/include/stdlib.h:339:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/include/stdlib.h:339:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/include/stdlib.h:339:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/include/stdlib.h:339:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/include/stdlib.h:339:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/include/stdlib.h:341:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/include/stdlib.h:341:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/include/stdlib.h:341:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:13:15: warning: implicit declaration of function 'xmlSchemaSetParserStructuredErrors' is invalid in C99 [-Wimplicit-function-declaration]
int t(void) { xmlSchemaSetParserStructuredErrors(); return 0; }
              ^
190 warnings generated.
ld: warning: directory not found for option '-L/opt/local/lib'
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     printf("%p", &t);
 9:   }
10: 
11:   return 0;
12: }
13: int t(void) { xmlSchemaSetParserStructuredErrors(); return 0; }
/* end */

--------------------

